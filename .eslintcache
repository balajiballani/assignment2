[{"D:\\React\\E-Commerce\\my-app\\src\\index.js":"1","D:\\React\\E-Commerce\\my-app\\src\\App.js":"2","D:\\React\\E-Commerce\\my-app\\src\\reportWebVitals.js":"3","D:\\React\\E-Commerce\\my-app\\src\\components\\NavBar.js":"4","D:\\React\\E-Commerce\\my-app\\src\\components\\ProductList.js":"5","D:\\React\\E-Commerce\\my-app\\src\\components\\Details.js":"6","D:\\React\\E-Commerce\\my-app\\src\\components\\PageNotFound.js":"7","D:\\React\\E-Commerce\\my-app\\src\\components\\Product.js":"8","D:\\React\\E-Commerce\\my-app\\src\\components\\Button.js":"9","D:\\React\\E-Commerce\\my-app\\src\\components\\Title.js":"10","D:\\React\\E-Commerce\\my-app\\src\\data.js":"11","D:\\React\\E-Commerce\\my-app\\src\\context.js":"12","D:\\React\\E-Commerce\\my-app\\src\\components\\modal.js":"13","D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\Cart.js":"14","D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\CartColumns.js":"15","D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\EmptyCart.js":"16","D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\CartList.js":"17","D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\CartItem.js":"18","D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\CartTotals.js":"19"},{"size":922,"mtime":1612095396621,"results":"20","hashOfConfig":"21"},{"size":840,"mtime":1612242570533,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":1501,"mtime":1612090859122,"results":"24","hashOfConfig":"21"},{"size":1099,"mtime":1612243778769,"results":"25","hashOfConfig":"21"},{"size":3644,"mtime":1612189825387,"results":"26","hashOfConfig":"21"},{"size":346,"mtime":1612272162600,"results":"27","hashOfConfig":"21"},{"size":3912,"mtime":1612242518958,"results":"28","hashOfConfig":"21"},{"size":681,"mtime":1612182715903,"results":"29","hashOfConfig":"21"},{"size":1013,"mtime":1612243807190,"results":"30","hashOfConfig":"21"},{"size":6730,"mtime":1612181127591,"results":"31","hashOfConfig":"21"},{"size":8729,"mtime":1612271131618,"results":"32","hashOfConfig":"21"},{"size":2291,"mtime":1612199964809,"results":"33","hashOfConfig":"21"},{"size":1279,"mtime":1612265490625,"results":"34","hashOfConfig":"21"},{"size":1445,"mtime":1612243537111,"results":"35","hashOfConfig":"21"},{"size":401,"mtime":1612247043879,"results":"36","hashOfConfig":"21"},{"size":349,"mtime":1612250175269,"results":"37","hashOfConfig":"21"},{"size":2169,"mtime":1612259982199,"results":"38","hashOfConfig":"21"},{"size":1801,"mtime":1612266681827,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1seagdw",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\React\\E-Commerce\\my-app\\src\\index.js",[],["85","86"],"D:\\React\\E-Commerce\\my-app\\src\\App.js",["87"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React,{component} from \"react\"\nimport NavBar from './components/NavBar'\nimport ProductList from './components/ProductList'\nimport Cart from './components/Cart/Cart'\nimport Details from './components/Details'\nimport PageNotFound from './components/PageNotFound'\nimport {Switch,Route} from 'react-router-dom'\nimport Modal from './components/modal'\nfunction App() {\n  \n  return (\n    <React.Fragment>\n       <NavBar/>\n       <Switch>\n         <Route exact path = '/' component = {ProductList}></Route>\n         <Route path = '/details' component = {Details}></Route>\n         <Route path = '/cart' component = {Cart}></Route>\n         <Route  component = {PageNotFound}></Route>\n       </Switch>\n       <Modal></Modal>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","D:\\React\\E-Commerce\\my-app\\src\\reportWebVitals.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\NavBar.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\ProductList.js",["88"],"import React, { Component } from 'react'\r\nimport Title from './Title'\r\nimport {ProductConsumer} from '../context'\r\nimport Product from './Product'\r\nexport default class ProductList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"my-5\">\r\n                    <div className=\"container\">\r\n                        <Title name=\"My  \" title=\"products\" ListOrProdcut=\"list\" ></Title>\r\n                        <div className = \"row\">\r\n                             <ProductConsumer>\r\n                                {(hello)=>{     {/* Always use function to get the value from Context-Provider*/}\r\n                                    return hello.products.map(product=>{\r\n                                        return <Product key = {product.id} product = {product}/>\r\n                                    })\r\n                                }}   \r\n                            </ProductConsumer> \r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","D:\\React\\E-Commerce\\my-app\\src\\components\\Details.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\PageNotFound.js",["89"],"import React, { Component } from 'react'\r\nimport Error_Image from '../Error_Image.jpg'\r\nimport styled from 'styled-components'\r\nexport default class PageNotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <img src={Error_Image}  alt = \"error_image\"></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\React\\E-Commerce\\my-app\\src\\components\\Product.js",["90","91"],"import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n//import Title from './Title'\r\nimport { ProductConsumer } from '../context'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types' //This is like instanceOf in Java \r\n//It checks wether the props is of specified type if not it throws a warning\r\nexport default class Product extends Component {\r\n    render() {\r\n        const { id, title, img, company, inCart, price } = this.props.product\r\n        {/*Since we are passing product object from ProductLis\r\n        t which has these properties so we use this.props.product */}\r\n        return (\r\n            <ProductWrapper className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\r\n                {/*md - medium lg-large my-Margin\r\n             */}\r\n                <div className=\"card\">\r\n                    <ProductConsumer>\r\n                        {(value) => (\r\n                            <div className=\"img-container p-5\" onClick={() => value.handleDetail(id)}>\r\n                                {/* p- Padding */}\r\n\r\n                                <Link to='/details'>\r\n                                    <img src={img} alt=\"product\" className=\"card-img-top\"></img>\r\n                                </Link>\r\n                                <button className=\"cart-btn\" disabled={\r\n                                    inCart ? true : false\r\n                                } onClick={() => {value.addToCart(id) \r\n                                ;value.openModal(id)}}>\r\n                                    {\r\n                                        inCart ? (<p className=\"text-capitalize mb-0\" disabled>In Cart</p>) : (<i className=\"fas fa-cart-plus\">\r\n                                        </i>)\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n\r\n                        )}\r\n\r\n                    </ProductConsumer>\r\n\r\n                    {/**Card Footer Say Price and Title */}\r\n                    <div className=\"card-footer d-flex justify-content-between\">\r\n                        <p className=\"align-self-center mb-0\">\r\n                            {title}\r\n                        </p>\r\n                        <h5 className=\"text-blue font-italic mb-0\">\r\n                            <span className=\"mr-1\">$</span>\r\n                            {price}\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            </ProductWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nProduct.propTypes = {  //Since this an array we used flower Bracket\r\n    product: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        img: PropTypes.string,\r\n        title: PropTypes.string,\r\n        inCart: PropTypes.bool,\r\n        price: PropTypes.number\r\n    }).isRequired\r\n\r\n}\r\n\r\nconst ProductWrapper = styled.div`\r\n.card{\r\n    border-color : transparent;\r\n    transition : all ls linear;\r\n}\r\n.card-footer{\r\n    background : transparent;\r\n    border-top : transparent;\r\n    transition : all ls linear;\r\n}\r\n&:hover{\r\n    .card{\r\n        border:0.04rem solid rgba(0,0,0,0.2);\r\n        box-shadow:2px 2px 5px 0px rgba(0,0,0,0.2);\r\n    }\r\n    .card-footer{\r\n        background:rgba(247,247,247);\r\n    }\r\n}\r\n.img-container{\r\n    position:relative;\r\n    overflow:hidden;\r\n}\r\n.card-img-top{\r\n    transition : all ls linear;\r\n}\r\n.img-container:hover .card-img-top{\r\n    transform:scale(1.2);\r\n}\r\n.cart-btn{\r\n    position : absolute;\r\n    bottom : 0;\r\n    right :0;\r\n    padding :0.2rem 0.4rem;\r\n    background:var(--lightBlue);\r\n    border:none;\r\n    color:var(--mainWhite);\r\n    font-size:1.4rem;\r\n    border-radius:0.5rem 0 0 0;\r\n    transform : translate(100%,100%);\r\n    transition : all ls linear;\r\n}\r\n.img-container:hover .cart-btn{\r\n    transform : translate(0,0);\r\n    transition : all ls linear;\r\n}\r\n.cart-btn:hover{\r\n    color : var(--mainBlue);\r\n    cursor : pointer;\r\n}\r\n`","D:\\React\\E-Commerce\\my-app\\src\\components\\Button.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\Title.js",["92"],"import React from 'react'\r\n\r\nexport default function Title({name,title,ListOrProdcut}) {\r\n    if(ListOrProdcut == \"list\"){\r\n        return (\r\n            <div className=\"row\">\r\n                <div className = \"col-10 mx-auto my-2 text-center text-title\">\r\n                    <h2 className = \"text-capitalize font-weight-bold\">\r\n                        {name}<strong className=\"text-blue\">\r\n                            {title}\r\n                        </strong>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"row\">\r\n                <div className = \"col-10 mx-auto my-2 text-center text-title\">\r\n                    <h6 className = \"text-capitalize font-weight-bold\">\r\n                        {name}<strong className=\"text-blue\"><br></br>\r\n                            {title}\r\n                        </strong>\r\n                    </h6>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n","D:\\React\\E-Commerce\\my-app\\src\\data.js",[],"D:\\React\\E-Commerce\\my-app\\src\\context.js",["93","94","95"],"//inorder to avoid the props drilling we are mainting the data in one area \r\n// and we are directly accessing the data(data.js) from that\r\nimport React, { Component } from 'react'\r\nimport {storeProducts,detailProduct} from './data'\r\n//Creating Context is done in Three Steps\r\n//1st Step Create a context\r\n//2nd Step Provide a context\r\n//3rd Step Consume the  Context Value\r\n//1st Step Create a context\r\n\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n\r\n    state = {\r\n        products:[],\r\n        details:detailProduct, //we are not disturbing this value since we are not changing the value of it \r\n        cart:[],\r\n        modalOpen:false,\r\n        modalProdcut:detailProduct,\r\n        cartSubTotal : 0,\r\n        cartTax : 0,\r\n        cartTotal:0\r\n    }\r\n    /* Here comes a value by Refrence problem if\r\n     we modifiy the state then it automatically gonna change in the storeProductsArray\r\n     var flash = [8,8,8];\r\n     var quicksilver = flash;   //assign-by-reference\r\n     quicksilver.push(0);\r\n     console.log(flash);        //[8,8,8,0]\r\n     console.log(quicksilver);  //[8,8,8,0] \r\n     consider the above example likewise if we change the products this gonna change in storeProducts\r\n    */\r\n    /* tester = () =>{\r\n        console.log(\"State Products: \",this.state.products[0].inCart);\r\n        console.log(\"Store Products: \",storeProducts[0].inCart);\r\n        const tempProducts = [...this.state.products];\r\n        tempProducts[0].inCart = true;\r\n        this.setState(()=>{\r\n            return {products:tempProducts}\r\n        },()=>{\r\n            console.log(\"After Products:\",this.state.products[0].inCart);\r\n            console.log(\"After Store Products:\",storeProducts[0].inCart)\r\n        })\r\n        This Method shows that the storeProducts data also changed to true so we miss the orginal copy\r\n        of data this has to be overcome by declaring the tempProdcuts array and passing the storeProducts\r\n        to tempProducts and setting the products property to tempproducts\r\n    } */\r\n\r\n   componentDidMount(){\r\n       {/*First the state is updated as empty in render once the rendering\r\n        is done componentDidMonut gets called and calls the setProducts where state is again updated calling the \r\n    render funtion again(since this.setState renders the component) \r\nand set the prodcut values in the productList */}\r\n       this.setProducts();\r\n   } \r\n   setProducts = () =>{\r\n       let tempProducts = []\r\n       storeProducts.forEach((item =>{\r\n         {/*This addition of elements into an array is a new way that comes with ES6 \r\n        var meat= ['Bacon','Ham']\r\n        var fruits = ['Apple','Cherry','Guava']\r\n        if we want to add the elements of two array and bring a brand new array we do not need to perform all the \r\n        push operations stuff ES6 gives the simple cut as below\r\n        var fruits = ['Apple',...meat,'Cherry','Guava']that's it we get an array of fruits with new elemets as\r\n        below \r\n        ['Apple','Bacon','Ham','Cherry','Guava']\r\n        Same is applied below item has prodcut and added into tempProducts\r\n        */}\r\n         \r\n           const singleItem = {...item};\r\n           tempProducts = [...tempProducts,singleItem]\r\n           console.log(\"tempProducts :\",tempProducts)\r\n       }))\r\n       this.setState(()=>{\r\n           return {products:tempProducts}\r\n       })\r\n       \r\n   }\r\n   getItem = (id)=>{\r\n    const product = this.state.products.find(item=>item.id === id)\r\n    return product;\r\n   }\r\n \r\n    addToCart = (id) =>{\r\n        let tempProdcuts = [...this.state.products];\r\n        /*This is for changing the property of the prodcut as well say if we click on add to cart\r\n        the property inCart should be changed to true if we do not set the state again after rendering \r\n        the page we get the actual values not the updated values so we copy the products into the temp \r\n        and update the state of the products once it is added to Cart and returning the product Array\r\n        which is updated */\r\n        const index = tempProdcuts.indexOf(this.getItem(id));\r\n        const product = tempProdcuts[index];\r\n        product.inCart = true;\r\n        product.count = 1;\r\n        const price = product.price;\r\n        product.total = price;\r\n        this.setState(()=>{\r\n            return{product:tempProdcuts,cart:[...this.state.cart,product]}//cart : Here we add the items that have added to cart \r\n        },()=>{\r\n            this.addTotals();\r\n        })\r\n\r\n    }\r\n    handleDetail = (id) =>{\r\n        const product = this.getItem(id);\r\n        this.setState(()=>{\r\n            return {details:product}\r\n        })\r\n    }\r\n    openModal = (id) =>{\r\n     const prodcut = this.getItem(id);\r\n     this.setState(()=>{\r\n         return{modalProdcut:prodcut,modalOpen:true}\r\n     })\r\n    }\r\n    closemodal = ()=>{\r\n        this.setState(()=>{\r\n            return{modalOpen:false}\r\n        })\r\n    }\r\n    increment = (id) =>{\r\n       let tempCart = [...this.state.cart]\r\n       const selectedProdcut = tempCart.find(item=>item.id===id)\r\n       const index = tempCart.indexOf(selectedProdcut)\r\n       const product = tempCart[index]\r\n       product.count = product.count+1;\r\n       product.total = product.price * product.count\r\n       this.setState(()=>{\r\n           return{cart:[...tempCart]}\r\n       },()=>{\r\n           this.addTotals();\r\n       })  \r\n      \r\n    }\r\n    decrement = (id) =>{\r\n        let tempCart = [...this.state.cart]\r\n        const selectedProdcut = tempCart.find(item=>item.id===id)\r\n        const index = tempCart.indexOf(selectedProdcut)\r\n        const product = tempCart[index]\r\n        product.count = product.count-1;\r\n        if(product.count === 0){\r\n            this.removeItem(id)\r\n        }\r\n        else{\r\n            product.total = product.price * product.count\r\n       this.setState(()=>{\r\n           return{cart:[...tempCart]}\r\n       },()=>{\r\n           this.addTotals();\r\n       }) \r\n        }\r\n        \r\n    }\r\n    removeItem = (id) =>{\r\n        let tempProdcuts = [...this.state.products];\r\n        /*This is for changing the property of the prodcut as well say if we click on add to cart\r\n        the property inCart should be changed to true if we do not set the state again after rendering \r\n        the page we get the actual values not the updated values so we copy the products into the temp \r\n        and update the state of the products once it is added to Cart and returning the product Array\r\n        which is updated */\r\n        let tempCart = [...this.state.cart]\r\n        const index = tempProdcuts.indexOf(this.getItem(id));\r\n        const product = tempProdcuts[index];\r\n        product.inCart = false;\r\n        //product.count = 1;\r\n        this.setState(()=>{\r\n            return{product:tempProdcuts,cart:tempCart.filter(cart=>cart.id!==id)}//cart : Here we add the items that have added to cart \r\n        },()=>{\r\n            this.addTotals();\r\n        })\r\n    }\r\n    addTotals = ()=>{\r\n        let subTotal = 0;\r\n        this.state.cart.map(item=>{\r\n            subTotal += item.total \r\n        })\r\n        const tempTax = subTotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2))\r\n        const cartTotal = subTotal+tax;\r\n        this.setState(()=>{\r\n            return{cartSubTotal:subTotal,cartTax:tax,cartTotal:cartTotal}\r\n        })\r\n\r\n    }\r\n    clearCart = () =>{\r\n       this.setState(()=>{\r\n           return{cart:[]}\r\n       },()=>{\r\n           this.setProducts();\r\n           this.addTotals();\r\n       })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value = {{\r\n                ...this.state,\r\n                handleDetail:this.handleDetail,\r\n                addToCart:this.addToCart,\r\n                openModal:this.openModal,\r\n                closeModal:this.closemodal,\r\n                increment:this.increment,\r\n                decrement:this.decrement,\r\n                removeItem:this.removeItem,\r\n                clearCart:this.clearCart\r\n            }}>  \r\n            {/* <button onClick={this.tester}>Test</button> */}\r\n             {/* Second Step Providing the context \r\n                here where we pass out data Say\r\n            data.Js and consume in our ProductList.Js this may be an Object or a String value */}\r\n            {this.props.children}{/*sending the props down to the requested children unless we send the \r\n            props our application not gonna start since this(Product Provider) the top level component in index.js */}\r\n                         \r\n            </ProductContext.Provider>\r\n            \r\n        )\r\n    }\r\n}\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider,ProductConsumer}","D:\\React\\E-Commerce\\my-app\\src\\components\\modal.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\Cart.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\CartColumns.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\EmptyCart.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\CartList.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\CartItem.js",[],"D:\\React\\E-Commerce\\my-app\\src\\components\\Cart\\CartTotals.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":3,"column":15,"nodeType":"102","messageId":"103","endLine":3,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":15,"column":49,"nodeType":"106","messageId":"107","endLine":15,"endColumn":114},{"ruleId":"100","severity":1,"message":"108","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"100","severity":1,"message":"109","line":10,"column":33,"nodeType":"102","messageId":"103","endLine":10,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":11,"column":9,"nodeType":"106","messageId":"107","endLine":12,"endColumn":70},{"ruleId":"110","severity":1,"message":"111","line":4,"column":22,"nodeType":"112","messageId":"113","endLine":4,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":51,"column":8,"nodeType":"106","messageId":"107","endLine":54,"endColumn":50},{"ruleId":"104","severity":1,"message":"105","line":60,"column":10,"nodeType":"106","messageId":"107","endLine":69,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":175,"column":33,"nodeType":"116","messageId":"117","endLine":175,"endColumn":35},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'styled' is defined but never used.","'company' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]